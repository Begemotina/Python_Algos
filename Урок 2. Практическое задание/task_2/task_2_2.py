"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)

ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ РЕКУРСИЮ
"""
USER_NUMBER = int(input('Введите число\n'))

def recur(user_number, even=0, odd=0):
    """я не понимю, почему оно работает по зеркальномиу"""

    if user_number <= 0:
        print(f'В вашем числе: \n\nчетных цифр: {even}\nнечётных {odd} ')
        return 1
    if user_number % 2:
        return recur(user_number // 10, even, odd + 1)
    else:
        return recur(user_number // 10, even + 1, odd)


recur(USER_NUMBER)
